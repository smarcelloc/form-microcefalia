-- -----------------------------------------------------
-- DataBase Microcefalia
-- -----------------------------------------------------
CREATE DATABASE IF NOT EXISTS Microcefalia DEFAULT CHARACTER SET utf8;
USE Microcefalia;

-- -----------------------------------------------------
-- Table Microcefalia.Cidade
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Microcefalia.Cidade (
  estado CHAR(2) NOT NULL,
  cidade VARCHAR(45) NOT NULL,
  PRIMARY KEY (estado, cidade))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Microcefalia.Endereco
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Microcefalia.Endereco (
  cep CHAR(8) NOT NULL,
  logradouro VARCHAR(100) NOT NULL,
  bairro VARCHAR(80) NOT NULL,
  Cidade_estado CHAR(2) NOT NULL,
  Cidade_cidade VARCHAR(45) NOT NULL,
  PRIMARY KEY (cep, logradouro, Cidade_estado, Cidade_cidade),
  INDEX fk_Endereco_Cidade_idx (Cidade_estado ASC, Cidade_cidade ASC) ,
  CONSTRAINT fk_Endereco_Cidade
    FOREIGN KEY (Cidade_estado , Cidade_cidade)
    REFERENCES Microcefalia.Cidade (estado , cidade)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table Microcefalia.Nacio
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Microcefalia.Nacio (
  idnacio SMALLINT(5) UNSIGNED NOT NULL,
  nome VARCHAR(100) NOT NULL,
  PRIMARY KEY (idnacio))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table Microcefalia.Cuidador
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Microcefalia.Cuidador (
  cpf CHAR(11) NOT NULL,
  nome VARCHAR(100) NOT NULL,
  pele ENUM('BR', 'PA', 'PR', 'AM', 'VE') NULL DEFAULT NULL,
  email VARCHAR(100) NULL DEFAULT NULL,
  tel VARCHAR(10) NULL DEFAULT NULL,
  cel VARCHAR(11) NULL DEFAULT NULL,
  dtnasc DATE NOT NULL,
  numero VARCHAR(10) NOT NULL,
  complemento VARCHAR(80) NULL DEFAULT NULL,
  genero ENUM('F', 'M', 'N') NULL DEFAULT NULL,
  municipio ENUM('R', 'U') NULL DEFAULT NULL,
  estado_origem CHAR(2) NOT NULL,
  estadocivil ENUM('SO', 'CA', 'DI', 'SE', 'VI', 'UE') NULL DEFAULT NULL,
  observacao VARCHAR(300) NULL DEFAULT NULL,
  vida ENUM('MR', 'RU', 'RE', 'BO', 'MB') NULL DEFAULT NULL,
  satisfeitoSaude ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  dorfisica ENUM('NA', 'MP', 'RE', 'BA', 'EX') NULL DEFAULT NULL,
  tratamentomedico ENUM('NA', 'MP', 'RE', 'BA', 'EX') NULL DEFAULT NULL,
  qtoaproveita ENUM('NA', 'MP', 'RE', 'BA', 'EX') NULL DEFAULT NULL,
  medidavidasentido ENUM('NA', 'MP', 'RE', 'BA', 'EX') NULL DEFAULT NULL,
  concentracao ENUM('NA', 'MP', 'RE', 'BA', 'EX') NULL DEFAULT NULL,
  segurovida ENUM('NA', 'MP', 'RE', 'BA', 'EX') NULL DEFAULT NULL,
  saudavelambiente ENUM('NA', 'MP', 'RE', 'BA', 'EX') NULL DEFAULT NULL,
  temenergia ENUM('NA', 'MP', 'RE', 'MU', 'CO') NULL DEFAULT NULL,
  aparencia ENUM('NA', 'MP', 'RE', 'MU', 'CO') NULL DEFAULT NULL,
  dinheirosuficiente ENUM('NA', 'MP', 'RE', 'MU', 'CO') NULL DEFAULT NULL,
  informacoes ENUM('NA', 'MP', 'RE', 'MU', 'CO') NULL DEFAULT NULL,
  lazer ENUM('NA', 'MP', 'RE', 'MU', 'CO') NULL DEFAULT NULL,
  locomover ENUM('MR', 'RU', 'RE', 'BO', 'MB') NULL DEFAULT NULL,
  sono ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  atividadesdia ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  capacidade ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  satisfeitoconsigo ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  satisfeitorelacoes ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  vidasexual ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  satisfeitoapoio ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  satisfeitolocal ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  servicosaude ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  meiotransporte ENUM('MI', 'IN', 'RE', 'SA', 'MS') NULL DEFAULT NULL,
  sentimentosnegativos ENUM('NA', 'AV', 'FR', 'MF', 'SE') NULL DEFAULT NULL,
  especiedomicilio ENUM('DP', 'DI', 'DC') NULL DEFAULT NULL,
  domiciliopermanente ENUM('PDJ', 'PDM', 'ALU', 'CPE', 'OU') NULL DEFAULT NULL,
  qtdbanheiro TINYINT(3) NOT NULL,
  qtdexclusivo TINYINT(3) NOT NULL,
  utiliza ENUM('S', 'N') NULL DEFAULT NULL,
  esgoto ENUM('FR', 'FS', 'RI', 'OU') NULL DEFAULT NULL,
  abastecimento ENUM('RG', 'AD', 'PN', 'CC', 'PF', 'RI', 'OU') NULL DEFAULT NULL,
  lixo ENUM('CD', 'CE', 'EN', 'JT', 'QU', 'JR', 'OU') NULL DEFAULT NULL,
  energiaeletrica ENUM('SC', 'SO', 'NE') NULL DEFAULT NULL,
  localidade ENUM('BP', 'BC', 'CR', 'CH', 'FC', 'RR', 'OU') NULL DEFAULT NULL,
  outrolocalidade VARCHAR(45) NULL DEFAULT NULL,
  quemmora ENUM('PA', 'CO', 'CD', 'SO', 'OU') NULL DEFAULT NULL,
  qtdirmaos TINYINT(3) NOT NULL,
  atualmente ENUM('AE', 'TE', 'AT', 'ED', 'EL', 'NT') NULL DEFAULT NULL,
  ocupacao VARCHAR(45) NULL DEFAULT NULL,
  trabalho ENUM('NT', 'EA', 'ED', 'EQ', 'ER', 'BO', 'TP', 'EN', 'TE', 'PS') NULL DEFAULT NULL,
  renda ENUM('SR', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10') NULL DEFAULT NULL,
  rendafamilia ENUM('SR', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10') NULL DEFAULT NULL,
  participacao ENUM('NT', 'TS', 'TR', 'TP', 'TE', 'RA', 'OU') NULL DEFAULT NULL,
  qtdcontribuicao ENUM('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'MM') NULL DEFAULT NULL,
  qtdpessoarenda ENUM('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'MM') NULL DEFAULT NULL,
  escolaridade ENUM('NN', 'FI', 'FC', 'MI', 'MC', 'SI', 'SC', 'ES', 'ME', 'DO', 'PD') NULL DEFAULT NULL,
  ensino ENUM('EP', 'ME', 'MP', 'MR', 'ER') NULL DEFAULT NULL,
  escolaridadepai ENUM('NN', 'FI', 'FC', 'MI', 'MC', 'SI', 'SC', 'ES', 'ME', 'DO', 'PD') NULL DEFAULT NULL,
  escolaridademae ENUM('NN', 'FI', 'FC', 'MI', 'MC', 'SI', 'SC', 'ES', 'ME', 'DO', 'PD') NULL DEFAULT NULL,
  aparelhosom TINYINT(3) UNSIGNED NULL DEFAULT '0',
  dvd TINYINT(3) UNSIGNED NULL DEFAULT '0',
  geladeira TINYINT(3) UNSIGNED NULL DEFAULT '0',
  freezer TINYINT(3) UNSIGNED NULL DEFAULT '0',
  maquinalavar TINYINT(3) UNSIGNED NULL DEFAULT '0',
  computador TINYINT(3) UNSIGNED NULL DEFAULT '0',
  tablet TINYINT(3) UNSIGNED NULL DEFAULT '0',
  telefonefixo TINYINT(3) UNSIGNED NULL DEFAULT '0',
  telefonecelular TINYINT(3) UNSIGNED NULL DEFAULT '0',
  tvassinatura TINYINT(3) UNSIGNED NULL DEFAULT '0',
  automoveis TINYINT(3) UNSIGNED NULL DEFAULT '0',
  motocicletas TINYINT(3) UNSIGNED NULL DEFAULT '0',
  convenio ENUM('S', 'N') NULL DEFAULT NULL,
  internet ENUM('S', 'N') NULL DEFAULT NULL,
  Nacio_idnacio SMALLINT(5) UNSIGNED NOT NULL,
  Endereco_cep CHAR(8) NOT NULL,
  Endereco_logradouro VARCHAR(100) NOT NULL,
  PRIMARY KEY (cpf, Nacio_idnacio, Endereco_cep, Endereco_logradouro),
  INDEX fk_Cuidador_Nacio1_idx (Nacio_idnacio ASC) ,
  INDEX fk_Cuidador_Endereco1_idx (Endereco_cep ASC, Endereco_logradouro ASC) ,
  CONSTRAINT fk_Cuidador_Nacio1
    FOREIGN KEY (Nacio_idnacio)
    REFERENCES Microcefalia.Nacio (idnacio)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Cuidador_Endereco1
    FOREIGN KEY (Endereco_cep , Endereco_logradouro)
    REFERENCES Microcefalia.Endereco (cep , logradouro)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table Microcefalia.Portador
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Microcefalia.Portador (
  idportador INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  nome VARCHAR(100) NOT NULL,
  pele ENUM('BR', 'PA', 'PR', 'AM', 'VE') NULL DEFAULT NULL,
  dtnasc DATE NOT NULL,
  dtinicio DATE NOT NULL,
  cuidaboca ENUM('S', 'N') NULL DEFAULT NULL,
  q_cuidaboca VARCHAR(45) NULL DEFAULT NULL,
  prenatal ENUM('S', 'N') NULL DEFAULT NULL,
  amamaterna ENUM('S', 'N') NULL DEFAULT NULL,
  instrudente ENUM('S', 'N') NULL DEFAULT NULL,
  doenca ENUM('S', 'N') NULL DEFAULT NULL,
  q_doenca VARCHAR(45) NULL DEFAULT NULL,
  parto ENUM('NO', 'CE', 'FO', 'PR', 'BP') NULL DEFAULT NULL,
  dorcabeca ENUM('S', 'N') NULL DEFAULT NULL,
  dorouvido ENUM('S', 'N') NULL DEFAULT NULL,
  infecgarg ENUM('S', 'N') NULL DEFAULT NULL,
  infecgargsim ENUM('MPP', 'MPA', 'D24', 'DPA', 'NNC') NULL DEFAULT NULL,
  bateurosto ENUM('S', 'N') NULL DEFAULT NULL,
  bateurostosim ENUM('CS', 'CP', 'HE', 'AM', 'DM', 'FO', 'DE') NULL DEFAULT NULL,
  probrespira ENUM('NO', 'RI', 'BR', 'AS', 'SI', 'BO') NULL DEFAULT NULL,
  probneuro ENUM('S', 'N') NULL DEFAULT NULL,
  q_probneuro VARCHAR(45) NULL DEFAULT NULL,
  remedio ENUM('S', 'N') NULL DEFAULT NULL,
  q_remedio VARCHAR(45) NULL DEFAULT NULL,
  amamentacao ENUM('S', 'N') NULL DEFAULT NULL,
  q_amamentacao DECIMAL(4,2) NULL DEFAULT NULL,
  dentista ENUM('S', 'N') NULL DEFAULT NULL,
  tratamento SET('RE', 'PR', 'TE', 'RA', 'AP', 'EX', 'TO', 'CF', 'TP', 'OU') NULL DEFAULT NULL,
  flour ENUM('S', 'N') NULL DEFAULT NULL,
  dentelimpo ENUM('1', '2', '3') NULL DEFAULT NULL,
  limpeza SET('ES', 'PA', 'FD', 'EB', 'GP') NULL DEFAULT NULL,
  pasta ENUM('S', 'N') NULL DEFAULT NULL,
  colocapasta ENUM('PC', 'IM', 'AR') NULL DEFAULT NULL,
  qtdcreme ENUM('GF', 'GE', 'GA') NULL DEFAULT NULL,
  qtdlimpeza ENUM('AT', 'AP', 'AI') NULL DEFAULT NULL,
  dentelimpeza ENUM('LA', 'MH', 'AH') NULL DEFAULT NULL,
  orientahigiene ENUM('S', 'N') NULL DEFAULT NULL,
  roeunhas ENUM('S', 'N') NULL DEFAULT NULL,
  mordeobjetos ENUM('S', 'N') NULL DEFAULT NULL,
  mordelabios ENUM('S', 'N') NULL DEFAULT NULL,
  ronca ENUM('S', 'N') NULL DEFAULT NULL,
  baba ENUM('S', 'N') NULL DEFAULT NULL,
  sonotranquilo ENUM('S', 'N') NULL DEFAULT NULL,
  mamadeira ENUM('S', 'N') NULL DEFAULT NULL,
  q_mamadeira DECIMAL(4,2) NULL DEFAULT NULL,
  chupeta ENUM('S', 'N') NULL DEFAULT NULL,
  q_chupeta DECIMAL(4,2) NULL DEFAULT NULL,
  chupoudedo ENUM('S', 'N') NULL DEFAULT NULL,
  q_chupoudedo DECIMAL(4,2) NULL DEFAULT NULL,
  formatochupeta ENUM('BR', 'BC') NULL DEFAULT NULL,
  conteudo ENUM('LP', 'LI', 'AC', 'LS', 'LD', 'FP', 'CN') NULL DEFAULT NULL,
  adocar ENUM('AC', 'AD', 'ME', 'NA') NULL DEFAULT NULL,
  qtdpessoas TINYINT(4) NOT NULL,
  ingerebife ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  cortapequeno ENUM('S', 'N') NULL DEFAULT NULL,
  frutas ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  legumes ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  legumescoz ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  ingeresalg ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  docesindustr ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  docescaseiros ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  biscoito ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  refrigerante ENUM('MA', 'P4', 'ME', 'RA') NULL DEFAULT NULL,
  ingereliquidos ENUM('S', 'N') NULL DEFAULT NULL,
  dificduro ENUM('S', 'N') NULL DEFAULT NULL,
  informativo ENUM('S', 'N') NULL DEFAULT NULL,
  Cuidador_cpf CHAR(11) NOT NULL,
  PRIMARY KEY (idportador, Cuidador_cpf),
  INDEX fk_Portador_Cuidador1_idx (Cuidador_cpf ASC) ,
  CONSTRAINT fk_Portador_Cuidador1
    FOREIGN KEY (Cuidador_cpf)
    REFERENCES Microcefalia.Cuidador (cpf)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- --------------------------------------------------
-- INSERT DATA Nacio
-- --------------------------------------------------
INSERT INTO Nacio (idnacio, nome) VALUES
(1, 'BRASIL'),
(2, 'PORTUGAL'),
(3, 'ESTADOS UNIDOS'),
(4, 'HAITI'),
(5, 'JAPÃO'),
(6, 'VENEZUELA'),
(7, 'PARAGUAI'),
(8, 'ITÁLIA'),
(9, 'ESPANHA'),
(10, 'ARGENTINA'),
(11, 'CHILE'),
(12, 'URUGUAI'),
(13, 'PERU'),
(14, 'AFEGANISTÃO'),
(15, 'ACROTÍRI E DECELIA'),
(16, 'ÁFRICA DO SUL'),
(17, 'ALBÂNIA'),
(18, 'ALEMANHA'),
(19, 'AMERICAN SAMOA'),
(20, 'ANDORRA'),
(21, 'ANGOLA'),
(22, 'ANGUILLA'),
(23, 'ANTÍGUA E BARBUDA'),
(24, 'ANTILHAS NEERLANDESAS'),
(25, 'ARÁBIA SAUDITA'),
(26, 'ARGÉLIA'),
(27, 'ARMÉNIA'),
(28, 'ARUBA'),
(29, 'AUSTRÁLIA'),
(30, 'ÁUSTRIA'),
(31, 'AZERBAIJÃO'),
(32, 'BAHAMAS'),
(33, 'BANGLADECHE'),
(34, 'BARBADOS'),
(35, 'BARÉM'),
(36, 'BASSAS DA ÍNDIA'),
(37, 'BÉLGICA'),
(38, 'BELIZE'),
(39, 'BENIM'),
(40, 'BERMUDAS'),
(41, 'BIELORRÚSSIA'),
(42, 'BOLÍVIA'),
(43, 'BÓSNIA E HERZEGOVINA'),
(44, 'BOTSUANA'),
(45, 'BRUNEI DARUSSALAM'),
(46, 'BULGÁRIA'),
(47, 'BURQUINA FASO'),
(48, 'BURUNDI'),
(49, 'BUTÃO'),
(50, 'CABO VERDE'),
(51, 'CAMARÕES'),
(52, 'CAMBOJA'),
(53, 'CANADÁ'),
(54, 'CATAR'),
(55, 'CAZAQUISTÃO'),
(56, 'CENTRO-AFRICANA REPÚBLICA'),
(57, 'CHADE'),
(58, 'CHINA'),
(59, 'CHIPRE'),
(60, 'COLÔMBIA'),
(61, 'COMORES'),
(62, 'CONGO'),
(63, 'CONGO REPÚBLICA DEMOCRÁTICA'),
(64, 'COREIA DO NORTE'),
(65, 'COREIA DO SUL'),
(66, 'COSTA DO MARFIM'),
(67, 'COSTA RICA'),
(68, 'CROÁCIA'),
(69, 'CUBA'),
(70, 'DINAMARCA'),
(71, 'DOMÍNICA'),
(72, 'EGIPTO'),
(73, 'EMIRADOS ÁRABES UNIDOS'),
(74, 'EQUADOR'),
(75, 'ERITREIA'),
(76, 'ESLOVÁQUIA'),
(77, 'ESLOVÉNIA'),
(78, 'ESTÓNIA'),
(79, 'ETIÓPIA'),
(80, 'FAIXA DE GAZA'),
(81, 'FIJI'),
(82, 'FILIPINAS'),
(83, 'FINLÂNDIA'),
(84, 'FRANÇA'),
(85, 'GABÃO'),
(86, 'GÂMBIA'),
(87, 'GANA'),
(88, 'GEÓRGIA'),
(89, 'GIBRALTAR'),
(90, 'GRANADA'),
(91, 'GRÉCIA'),
(92, 'GRONELÂNDIA'),
(93, 'GUADALUPE'),
(94, 'GUAM'),
(95, 'GUATEMALA'),
(96, 'GUERNSEY'),
(97, 'GUIANA'),
(98, 'GUIANA FRANCESA'),
(99, 'GUINÉ'),
(100, 'GUINÉ EQUATORIAL'),
(101, 'GUINÉ-BISSAU'),
(102, 'HONDURAS'),
(103, 'HONG KONG'),
(104, 'HUNGRIA'),
(105, 'IÉMEN'),
(106, 'ILHA BOUVET'),
(107, 'ILHA CHRISTMAS'),
(108, 'ILHA DE CLIPPERTON'),
(109, 'ILHA DE JOÃO DA NOVA'),
(110, 'ILHA DE MAN'),
(111, 'ILHA DE NAVASSA'),
(112, 'ILHA EUROPA'),
(113, 'ILHA NORFOLK'),
(114, 'ILHA TROMELIN'),
(115, 'ILHAS ASHMORE E CARTIER'),
(116, 'ILHAS CAIMAN'),
(117, 'ILHAS COCOS (KEELING)'),
(118, 'ILHAS COOK'),
(119, 'ILHAS DO MAR DE CORAL'),
(120, 'ILHAS FALKLANDS (ILHAS MALVINAS)'),
(121, 'ILHAS FEROE'),
(122, 'ILHAS GEÓRGIA DO SUL E SANDWICH DO SUL'),
(123, 'ILHAS MARIANAS DO NORTE'),
(124, 'ILHAS MARSHALL'),
(125, 'ILHAS PARACEL'),
(126, 'ILHAS PITCAIRN'),
(127, 'ILHAS SALOMÃO'),
(128, 'ILHAS SPRATLY'),
(129, 'ILHAS VIRGENS AMERICANAS'),
(130, 'ILHAS VIRGENS BRITÂNICAS'),
(131, 'ÍNDIA'),
(132, 'INDONÉSIA'),
(133, 'IRÃO'),
(134, 'IRAQUE'),
(135, 'IRLANDA'),
(136, 'ISLÂNDIA'),
(137, 'ISRAEL'),
(138, 'JAMAICA'),
(139, 'JAN MAYEN'),
(140, 'JERSEY'),
(141, 'JIBUTI'),
(142, 'JORDÂNIA'),
(143, 'KIRIBATI'),
(144, 'KOWEIT'),
(145, 'LAOS'),
(146, 'LESOTO'),
(147, 'LETÓNIA'),
(148, 'LÍBANO'),
(149, 'LIBÉRIA'),
(150, 'LÍBIA'),
(151, 'LISTENSTAINE'),
(152, 'LITUÂNIA'),
(153, 'LUXEMBURGO'),
(154, 'MACAU'),
(155, 'MACEDÓNIA'),
(156, 'MADAGÁSCAR'),
(157, 'MALÁSIA'),
(158, 'MALAVI'),
(159, 'MALDIVAS'),
(160, 'MALI'),
(161, 'MALTA'),
(162, 'MARROCOS'),
(163, 'MARTINICA'),
(164, 'MAURÍCIA'),
(165, 'MAURITÂNIA'),
(166, 'MAYOTTE'),
(167, 'MÉXICO'),
(168, 'MIANMAR'),
(169, 'MICRONÉSIA'),
(170, 'MOÇAMBIQUE'),
(171, 'MOLDÁVIA'),
(172, 'MÓNACO'),
(173, 'MONGÓLIA'),
(174, 'MONTENEGRO'),
(175, 'MONTSERRAT'),
(176, 'NAMÍBIA'),
(177, 'NAURU'),
(178, 'NEPAL'),
(179, 'NICARÁGUA'),
(180, 'NÍGER'),
(181, 'NIGÉRIA'),
(182, 'NIUE'),
(183, 'NORUEGA'),
(184, 'NOVA CALEDÓNIA'),
(185, 'NOVA ZELÂNDIA'),
(186, 'OMÃ'),
(187, 'PAÍSES BAIXOS'),
(188, 'PALAU'),
(189, 'PALESTINA'),
(190, 'PANAMÁ'),
(191, 'PAPUÁSIA-NOVA GUINÉ'),
(192, 'PAQUISTÃO'),
(193, 'POLINÉSIA FRANCESA'),
(194, 'POLÓNIA'),
(195, 'PORTO RICO'),
(196, 'QUÉNIA'),
(197, 'QUIRGUIZISTÃO'),
(198, 'REINO UNIDO'),
(199, 'REPÚBLICA CHECA'),
(200, 'REPÚBLICA DOMINICANA'),
(201, 'ROMÉNIA'),
(202, 'RUANDA'),
(203, 'RÚSSIA'),
(204, 'SAHARA OCCIDENTAL'),
(205, 'SALVADOR'),
(206, 'SAMOA'),
(207, 'SANTA HELENA'),
(208, 'SANTA LÚCIA'),
(209, 'SANTA SÉ'),
(210, 'SÃO CRISTÓVÃO E NEVES'),
(211, 'SÃO MARINO'),
(212, 'SÃO PEDRO E MIQUELÃO'),
(213, 'SÃO TOMÉ E PRÍNCIPE'),
(214, 'SÃO VICENTE E GRANADINAS'),
(215, 'SEICHELES'),
(216, 'SENEGAL'),
(217, 'SERRA LEOA'),
(218, 'SÉRVIA'),
(219, 'SINGAPURA'),
(220, 'SÍRIA'),
(221, 'SOMÁLIA'),
(222, 'SRI LANCA'),
(223, 'SUAZILÂNDIA'),
(224, 'SUDÃO'),
(225, 'SUÉCIA'),
(226, 'SUÍÇA'),
(227, 'SURINAME'),
(228, 'SVALBARD'),
(229, 'TAILÂNDIA'),
(230, 'TAIWAN'),
(231, 'TAJIQUISTÃO'),
(232, 'TANZÂNIA'),
(233, 'TERRITÓRIO BRITÂNICO DO OCEANO ÍNDICO'),
(234, 'TERRITÓRIO DAS ILHAS HEARD E MCDONALD'),
(235, 'TIMOR-LESTE'),
(236, 'TOGO'),
(237, 'TOKELAU'),
(238, 'TONGA'),
(239, 'TRINDADE E TOBAGO'),
(240, 'TUNÍSIA'),
(241, 'TURKS E CAICOS'),
(242, 'TURQUEMENISTÃO'),
(243, 'TURQUIA'),
(244, 'TUVALU'),
(245, 'UCRÂNIA'),
(246, 'UGANDA'),
(247, 'USBEQUISTÃO'),
(248, 'VANUATU'),
(249, 'VIETNAME'),
(250, 'WALLIS E FUTUNA'),
(251, 'ZÂMBIA'),
(252, 'ZIMBABUÉ');
